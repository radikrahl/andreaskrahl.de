/// Adds a given property and its value.
/// @param {Map} $value is represented by a list of values for each breakpoint.
/// @param {String} $property defines the property which should be used.
/// @param {List} $directions defines a list of propertys which should be added to the main rule. e.g. padding-top, padding-left
@mixin add-by-property($values, $property, $directions: null) {
  @if ($directions) {
    @if type-of($values) == map {
      @media #{$small-only} {
        @each $direction in $directions {
          #{$property}-#{$direction}: map-get($values, sm);
        }
      }

      @media #{$medium-only} {
        @each $direction in $directions {
          #{$property}-#{$direction}: map-get($values, md);
        }
      }

      @media #{$large-up} {
        @each $direction in $directions {
          #{$property}-#{$direction}: map-get($values, lg);
        }
      }
    } @else {
      @warn 'there was no map given as variable, if it was intended to use different values for every breakpoint try using a map';
      @each $direction in $directions {
        #{$property}-#{$direction}: $values;
      }
    }
  } @else {
    @if type-of($values) == list {
      @media #{$small-only} {
        #{$property}: getValues($values, sm);
      }

      @media #{$medium-only} {
        #{$property}: getValues($values, md);
      }

      @media #{$large-up} {
        #{$property}: getValues($values, lg);
      }
    } @else {
      // if $values is type-of [MAP] then get by breakpoint
      @if type-of($values) == map {
        @media #{$small-only} {
          #{$property}: map-get($values, sm);
        }

        @media #{$medium-only} {
          #{$property}: map-get($values, md);
        }

        @media #{$large-up} {
          #{$property}: map-get($values, lg);
        }
      }
      // else get single value
      @else {
        #{$property}: $values;
      }
    }
  }
}

/// Get values for each breakpoint by given map or single value.
/// Creates e.g { padding: 20px 10px 0 }
/// @param {Map|String} $values list of values of either a map of values or a single value.
/// @param {String} $breakpoint can be [sm, md, lg]. Used to get value out of given map by breakpoint
@function getValues($values, $breakpoint) {
  $temp: null;

  @each $value in $values {
    @if type-of($value) == map {
      $temp: append($temp, map-get($value, $breakpoint));
    } @else {
      $temp: append($temp, $value);
    }
  }

  @return $temp;
}
